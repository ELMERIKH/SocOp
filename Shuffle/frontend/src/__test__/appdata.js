const Data = [
  {
    name: "hive",
    is_valid: false,
    id: "02828a90-658b-41c4-8726-e31da7e02fe9",
    id_: "02828a90-658b-41c4-8726-e31da7e02fe9",
    link: "",
    app_version: "1.0.0",
    description:
      "The Hive app allows for walkoff to generate or close cases in TheHive",
    environment: "cloud",
    contact_info: { name: "FORGE Cyber", url: "https://github.com/" },
    actions: [
      {
        description: "creates a hive case",
        id_: "eb84008d-b0e0-41c6-a9b3-d7a51866bcd4",
        name: "create_case",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "log data to generate custom fields",
            id_: "b484aba8-0787-42e9-a97a-882a59e02f8f",
            name: "log_data",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "URL of TheHive",
            id_: "deb0a68d-479a-4472-b547-1eb82fb3888d",
            name: "url",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "API key to access TheHive",
            id_: "5116b359-c8da-41cf-80a4-4292a1a3c90b",
            name: "api_key",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "b040890c-5462-458b-8f54-054e6ce2a146",
          schema: { type: "object" },
        },
      },
      {
        description: "Updates a case data as well as severity",
        id_: "b7f64744-04e3-4166-990e-70106edc88cf",
        name: "update_case",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "json from trigger",
            id_: "ac37d451-ff45-4740-b5a7-de389afcb2b1",
            name: "input",
            required: true,
            schema: { type: "object" },
          },
          {
            description: "id for case",
            id_: "69613390-78c9-4b5d-aa71-b6c4a4750f8f",
            name: "id",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "severity of change",
            id_: "b04523b0-e74e-44a3-9c51-055c1e53167a",
            name: "severity",
            required: true,
            schema: { type: "integer" },
          },
          {
            description: "URL of TheHive",
            id_: "e415c1f9-d502-4a5d-9c8a-8cdefe0ebf88",
            name: "url",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "API key to access TheHive",
            id_: "2aa8e834-b889-467a-9172-373930b013cf",
            name: "api_key",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: { description: "", id_: "", schema: { type: "" } },
      },
      {
        description: "Closes a case in TheHive",
        id_: "240f26ef-5045-4711-94a5-af7a947ac5a4",
        name: "close_case",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "ID of case to close",
            id_: "71eb8b33-56dc-416f-8ae9-6bee56321f9b",
            name: "case_id",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "URL of TheHive",
            id_: "a3bbb859-d6fb-45ec-a08f-8895c8f8b0d5",
            name: "url",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "API key to access TheHive",
            id_: "660ba026-886f-413c-809a-8a48961d9228",
            name: "api_key",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Resolution status of the case to close.",
            id_: "6b9604d8-7358-4362-b0f4-0d570a366724",
            name: "resolution_status",
            required: true,
            schema: { type: "string" },
          },
          {
            description:
              "Impact status of the case to close. The impact status is only captured when resolution status is TruePositive",
            id_: "11651f4f-4521-4f1b-a2c7-66078f9be886",
            name: "impact_status",
            required: true,
            schema: { type: "string" },
          },
          {
            description:
              "Tags to add to the case once closed. Comma separated string.",
            id_: "01a0951f-92f8-485a-b8a2-0664a7e03862",
            name: "tags",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Explanation of why the case was closed.",
            id_: "fa67a17b-b6e0-42e6-8988-03a16484c4b0",
            name: "summary",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "ebba5506-32c8-4bd2-a004-f32c8ec9cdf6",
          schema: { type: "object" },
        },
      },
    ],
  },
  {
    name: "walk_off",
    is_valid: false,
    id: "1f52e17e-c11b-4cf4-abdb-a216211a0d27",
    id_: "1f52e17e-c11b-4cf4-abdb-a216211a0d27",
    link: "",
    app_version: "1.0.0",
    description: "An example of a Walkoff App specification",
    environment: "cloud",
    contact_info: {
      name: "Walkoff Team",
      url: "https://github.com/nsacyber/walkoff",
    },
    actions: [
      {
        description: "Connect to Walkoff",
        id_: "a9926e7f-18f9-4b93-b805-27cdb5a232ff",
        name: "connect",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "Timeout on the request (in seconds)",
            id_: "300136af-3c30-4e2b-babe-272f845942a0",
            name: "timeout",
            required: true,
            schema: { type: "number" },
          },
          {
            description: "username",
            id_: "896de900-9ca1-4108-a034-016e9c6ffe54",
            name: "username",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "password",
            id_: "e75e75d4-8a6b-4c24-8ffd-61b435683edb",
            name: "password",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "de121927-243f-4f09-9331-c48ca25e85d1",
          schema: { type: "string" },
        },
      },
      {
        description: "Disconnect from Walkoff",
        id_: "acd81f9b-353c-4749-a33a-2091da2d307c",
        name: "disconnect",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "Timeout on the request (in seconds)",
            id_: "76819a03-5272-4421-99cd-1e53f95963f0",
            name: "timeout",
            required: true,
            schema: { type: "number" },
          },
          {
            description: "refresh token",
            id_: "b583836e-eff4-4e7c-8430-286bfa81e43f",
            name: "refresh_token",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "d6cc2470-2dc9-43f9-a2f9-fb123c590426",
          schema: { type: "string" },
        },
      },
      {
        description: "Gets a list of all the users loaded on the system",
        id_: "6610a111-687e-45f5-a60d-26048594cdb1",
        name: "get_all_users",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "Timeout on the request (in seconds)",
            id_: "89b9a459-f756-40d8-b2c0-1a7c57987fee",
            name: "timeout",
            required: true,
            schema: { type: "number" },
          },
          {
            description: "Access Token",
            id_: "496c7956-964b-4977-88ed-27db81a94cfe",
            name: "access_token",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "642ecea4-e747-4dfe-9ca7-4f290847c0ed",
          schema: { type: "string" },
        },
      },
      {
        description: "Gets a list of all the workflows loaded on the system",
        id_: "7cb34d71-2619-40b1-a565-17274fea924e",
        name: "get_all_workflows",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "Timeout on the request (in seconds)",
            id_: "e4553287-018d-465a-8599-a605fdb5fb71",
            name: "timeout",
            required: true,
            schema: { type: "number" },
          },
          {
            description: "Access Token",
            id_: "f9193b36-cc5b-4a5f-babf-7df321837f57",
            name: "access_token",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "684de06e-b048-4332-88c5-9555ca41e2a1",
          schema: { type: "string" },
        },
      },
      {
        description: "Executes a workflow",
        id_: "9aaf7af4-fa4b-45d1-ac99-5722f0487aef",
        name: "execute_workflow",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "ID of the workflow",
            id_: "2f9c0aaf-82ea-4fab-9c26-99268cc9735e",
            name: "workflow_id",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Timeout on the request (in seconds)",
            id_: "35fc2b33-0e03-4b48-9e1c-73aa8a0b4ad7",
            name: "timeout",
            required: true,
            schema: { type: "number" },
          },
          {
            description: "Access Token",
            id_: "463425b6-ead9-4783-ad40-e04e6d30bc6e",
            name: "access_token",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "fda59148-a2b1-4180-a34d-8beef5d68929",
          schema: { type: "string" },
        },
      },
      {
        description: "Log out of Walkoff",
        id_: "160693dc-38c4-4a7c-a36b-bd529e69118b",
        name: "shutdown",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "refresh Token",
            id_: "a24a2395-7696-48cc-a1b8-b71c881c1180",
            name: "refresh_token",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Timeout on the request (in seconds)",
            id_: "4b0b1d88-203b-4ba3-956f-822def41d0cb",
            name: "timeout",
            required: true,
            schema: { type: "number" },
          },
        ],
        returns: {
          description: "",
          id_: "7836185e-786b-4d13-8c9b-b29d89d61155",
          schema: { type: "string" },
        },
      },
    ],
  },
  {
    name: "ip_addr_utils",
    is_valid: false,
    id: "4f00d85c-1fc8-4db2-a1d2-fab1eff5d02e",
    id_: "4f00d85c-1fc8-4db2-a1d2-fab1eff5d02e",
    link: "",
    app_version: "1.0.0",
    description:
      "An IP address app that will allow users to specify ip addresses and will format them correctly",
    environment: "cloud",
    contact_info: {
      name: "Walkoff Team",
      url: "https://github.com/nsacyber/walkoff",
    },
    actions: [
      {
        description:
          "Sets the timestamp fro which scipt outputs will be filed under",
        id_: "5404d09b-08d8-469b-9087-e6b22892188b",
        name: "set_timestamp",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [],
        returns: {
          description: "",
          id_: "8945dbff-0920-4b04-8682-e9086bcae5a4",
          schema: { type: "string" },
        },
      },
      {
        description:
          "Converts ip address from CIDR notation to individual IP's for easier integration with other apps.",
        id_: "d6c39b8b-63b7-4198-82d2-b8a4f3ed95f2",
        name: "cidr_to_array",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "list of hosts to execute on",
            id_: "14a43bde-2a88-4cf7-987c-e7bb62c202c0",
            name: "ip_array",
            required: true,
            schema: { type: "array" },
          },
        ],
        returns: {
          description: "",
          id_: "22c7aac2-321e-451a-a9f4-61b9c6656cb7",
          schema: { type: "array" },
        },
      },
    ],
  },
  {
    name: "power_shell",
    is_valid: false,
    id: "5b570c0b-4f31-4f2e-93ac-da39b78502bb",
    id_: "5b570c0b-4f31-4f2e-93ac-da39b78502bb",
    link: "",
    app_version: "1.0.0",
    description: "A power shell app that can run commands on a remote host.",
    environment: "cloud",
    contact_info: {
      name: "Walkoff Team",
      url: "https://github.com/nsacyber/walkoff",
    },
    actions: [
      {
        description:
          "Sets the timestamp fro which scipt outputs will be filed under",
        id_: "8f0cb2b7-1cd1-4284-8790-f8234ec9a1f9",
        name: "set_timestamp",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [],
        returns: {
          description: "",
          id_: "b58197d0-42fc-40bc-a40f-b1bea1c44b01",
          schema: { type: "string" },
        },
      },
      {
        description:
          'Executes powershell scripts on remote devices (Scripts located in "scripts" directory within app).',
        id_: "cb1fb39a-9cd9-485d-8c2a-e4fe138035e8",
        name: "exec_command_prompt_from_file",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "list of hosts to execute on",
            id_: "13fd6552-5b2b-4081-89f9-8e9dad5bdea2",
            name: "hosts",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "filename in which scripts will be located",
            id_: "7a51a4e2-2c7d-4c7f-9aca-dc2d1316f2db",
            name: "local_file_name",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Username for remote host",
            id_: "6ea5d033-308b-453e-84ff-416011b459d7",
            name: "username",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Password for remote host user",
            id_: "b71eb882-4b22-456e-980d-84cbba55216b",
            name: "password",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "transport type",
            id_: "78c824c8-97f9-46ea-ba2a-ada98127555b",
            name: "transport",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "whether server certificate should be validated",
            id_: "ca847f0c-26de-4289-a13b-0aca5ac55d1c",
            name: "server_cert_validation",
            required: true,
            schema: { type: "boolean" },
          },
          {
            description:
              'Will encrypt the WinRM messages if set to True and "transport auth" supports message encryption',
            id_: "2747d198-2fd2-47a0-8854-4a3dfc5baa77",
            name: "message_encryption",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: { description: "", id_: "", schema: { type: "" } },
      },
      {
        description: "Executes the powershell command on remote devices.",
        id_: "70717155-5377-40d1-989b-3db7b90c5975",
        name: "exec_command_prompt",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "list of hosts to execute on",
            id_: "b151934c-dea4-4ba9-a993-1e527093b6e4",
            name: "hosts",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "list of commands to execute",
            id_: "fa6386e4-0e45-453e-8510-6d4affdb7e31",
            name: "commands",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "Username for remote host",
            id_: "a2c56d5d-48eb-455f-8e4b-155855ac4fa4",
            name: "username",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Password for remote host user",
            id_: "66b4b42e-bd81-4180-8ff8-84fae5e590f2",
            name: "password",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "transport type",
            id_: "d0a7b275-8a0f-4421-9b75-7eb3dbc6ff38",
            name: "transport",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "whether server certificate should be validated",
            id_: "5df9e652-9e3c-437d-b81f-92e8e0702312",
            name: "server_cert_validation",
            required: true,
            schema: { type: "boolean" },
          },
          {
            description:
              "Will encrypt the WinRM messages if set to True and the transport auth supports message encryption",
            id_: "64f64521-5ded-4f0b-8590-f9c6395cd98f",
            name: "message_encryption",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: { description: "", id_: "", schema: { type: "" } },
      },
      {
        description:
          "Executes the powershell script on remote devices based on script file passed in.",
        id_: "d0fabf12-9db6-4a0e-8785-5248b1035051",
        name: "exec_powershell_script_from_file",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "list of hosts to execute on",
            id_: "09299ae2-38a0-4fb3-b064-fd3597424d67",
            name: "hosts",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "type of shell you want to execute",
            id_: "3d076cba-93d2-4f58-abfd-1475b354444d",
            name: "shell_type",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "filename in which scripts will be located",
            id_: "b82484c2-861c-4193-925a-e23bd882938c",
            name: "local_file_name",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Username for remote host",
            id_: "79f42b59-2218-4d41-b13e-154b2ed89105",
            name: "username",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Password for remote host user",
            id_: "35ac706c-d375-45ab-add5-40d9b846100c",
            name: "password",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "transport type",
            id_: "aa9a2b80-7836-4810-82fa-3c270d9e18f6",
            name: "transport",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "whether server certificate should be validated",
            id_: "39cbd4d7-a0cf-4b9c-99bc-5b7c46cfc8df",
            name: "server_cert_validation",
            required: true,
            schema: { type: "boolean" },
          },
          {
            description:
              "Will encrypt the WinRM messages if set to True and the transport auth supports message encryption",
            id_: "c7c161e7-c5db-49b8-a7de-b10a203c551b",
            name: "message_encryption",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: { description: "", id_: "", schema: { type: "" } },
      },
      {
        description:
          "Executes the powershell command/script on remote devices.",
        id_: "98c0cd0f-a05a-4b26-809c-5dbf3ecb791f",
        name: "exec_powershell_script",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "list of hosts to execute on",
            id_: "9e69e9b0-4639-43dd-9b4c-e4cb710ce63c",
            name: "hosts",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "type of shell you want to execute",
            id_: "6dce7ac6-b0ac-4d48-a79a-e9db795d751b",
            name: "shell_type",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "script in the form of array commands",
            id_: "700bb930-582e-4cbe-85e9-f5656461ecd5",
            name: "arguments",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "Username for remote host",
            id_: "22f0f58f-7e3c-43f6-afca-8e6800a6052e",
            name: "username",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "Password for remote host user",
            id_: "5b53cb8d-eaa4-4d31-8142-31151406100c",
            name: "password",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "transport type",
            id_: "635e350e-7a4d-4b94-aa0e-3e0a57ba5577",
            name: "transport",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "whether server certificate should be validated",
            id_: "07ec9b94-f626-42e7-a5a8-6e9b68b7bf7d",
            name: "server_cert_validation",
            required: true,
            schema: { type: "boolean" },
          },
          {
            description:
              "Will encrypt the WinRM messages if set to True and the transport auth supports message encryption",
            id_: "1ec509eb-0444-4f08-971e-1da23983d588",
            name: "message_encryption",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "762934c3-8de3-4261-850f-38b12effc90a",
          schema: { type: "string" },
        },
      },
    ],
  },
  {
    name: "ssh",
    is_valid: false,
    id: "68bfeb11-4e8f-4d46-9cf5-5f681be05858",
    id_: "68bfeb11-4e8f-4d46-9cf5-5f681be05858",
    link: "",
    app_version: "1.0.0",
    description: "Executes ssh shell commands via SSH",
    environment: "cloud",
    contact_info: {
      name: "Walkoff Team",
      url: "https://github.com/nsacyber/walkoff",
    },
    actions: [
      {
        description: "Execute command on remote server with SSH client",
        id_: "2ec132a9-1c32-42eb-8260-bcfac47901fb",
        name: "exec_command",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "hosts or hostnames of the remote server",
            id_: "d94d2878-9208-445a-a9b9-852d05ef5b0c",
            name: "hosts",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "port number",
            id_: "022cd027-b0f2-49ee-a512-da8a07ed2bfc",
            name: "port",
            required: true,
            schema: { type: "integer" },
          },
          {
            description: "json array of arguments",
            id_: "2d8dff25-dbc9-4656-9de3-73280015eaaf",
            name: "args",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "username to login with",
            id_: "89145276-3837-4e48-b9ab-0aa76500ba72",
            name: "username",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "password to login with",
            id_: "564fb3d7-89ff-41df-b3ed-6ba23d7b3f3e",
            name: "password",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "1395434e-52c2-4428-a1ac-966a315af6e0",
          schema: { type: "string" },
        },
      },
      {
        description: "Run a local bash command",
        id_: "baa63db8-c8d6-4dea-b774-81fe4b8dddfb",
        name: "exec_local_command",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "source path of the file to copy",
            id_: "fe99ea27-1176-4ca5-8de7-a5754f429784",
            name: "command",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "ac58f084-4234-4380-b438-a2c9239344f2",
          schema: { type: "string" },
        },
      },
      {
        description: "Copy remote file to remote host using sftp",
        id_: "87f34206-3b72-4d01-b64a-9bacdf822526",
        name: "sftp_copy",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "source path of the file to copy",
            id_: "43f07eb3-7e1b-4ea3-8684-862111011394",
            name: "src_path",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "remote path of the file destination",
            id_: "1a53170b-15b7-4cf8-9dff-9309d56bdacf",
            name: "dest_path",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "host or hostname of the remote server",
            id_: "4d78b34e-09ae-48c3-9eeb-f5042903bc04",
            name: "src_host",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "port number",
            id_: "29ddd615-05d3-4531-9869-23ca7b366133",
            name: "src_port",
            required: true,
            schema: { type: "integer" },
          },
          {
            description: "username to login with",
            id_: "f9db153e-0c9f-4808-9814-9277f56b2f47",
            name: "src_username",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "password to login with",
            id_: "a6337fa3-0704-49ca-8920-a49229bed77e",
            name: "src_password",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "host or hostname of the remote server",
            id_: "04399d82-0ef6-4bdc-b563-344df67219a2",
            name: "dest_host",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "port number",
            id_: "262df217-34fa-4165-a753-e71488099729",
            name: "dest_port",
            required: true,
            schema: { type: "integer" },
          },
          {
            description: "username to login with",
            id_: "4fde41af-112b-4b33-88dc-ce3219b444f3",
            name: "dest_username",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "password to login with",
            id_: "d9382c2a-b64c-4ad8-b7ca-488aa8e440fb",
            name: "dest_password",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "9b484424-f7d7-42ef-b553-f40ec1805806",
          schema: { type: "string" },
        },
      },
      {
        description: "runs the specified shell script on the remote server(s)",
        id_: "bb32494e-b808-4d9b-8f9a-f366a9bfd21e",
        name: "run_shell_script_file",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "local path of the shell script to run",
            id_: "41df393d-3435-4e0c-9c7e-dd6531fdc0a6",
            name: "local_file_name",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "hosts of the remote server",
            id_: "f2bd124e-1dbb-4b87-a12f-ef7f25d6eb2d",
            name: "hosts",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "port number",
            id_: "eb2a8834-ea05-4d54-8900-e723e2056132",
            name: "port",
            required: true,
            schema: { type: "integer" },
          },
          {
            description: "username to login with",
            id_: "ba961ec7-2200-420e-9142-7b237c046809",
            name: "username",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "password to login with",
            id_: "65b6d98a-5b23-4d5d-ae57-022057038bae",
            name: "password",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "94e55d3b-ef12-4114-8c60-07e3e6417df8",
          schema: { type: "string" },
        },
      },
    ],
  },
  {
    name: "Builtin",
    is_valid: false,
    id: "e34f0c67-83e9-443a-b9e7-7b152b4b16f6",
    id_: "e34f0c67-83e9-443a-b9e7-7b152b4b16f6",
    link: "",
    app_version: "1.0.0",
    description: "Walkoff built-in functions useful in workflow development.",
    environment: "cloud",
    contact_info: {
      name: "Walkoff Team",
      url: "https://github.com/nsacyber/walkoff",
    },
    actions: [
      {
        description:
          "Takes input from an API Call and triggers the rest of the workflow to beign executing again.",
        id_: "c3e959c6-2c97-48bb-bf00-4082bf812a5d",
        name: "Trigger",
        node_type: "TRIGGER",
        environment: "cloud",
        parameters: [],
        returns: {
          description: "",
          id_: "6265f75b-e9a7-4d0d-b0e8-7c4da5ac5e65",
          schema: { type: "string" },
        },
      },
      {
        description:
          "Takes input from a previous action and chooses which branch to take according to your logic.",
        id_: "8b260c29-dd20-405d-b1a6-29d2e67d43e5",
        name: "Condition",
        node_type: "CONDITION",
        environment: "cloud",
        parameters: [],
        returns: {
          description: "",
          id_: "a4c44cdd-fd3b-46ef-b151-51c1f686fa40",
          schema: { type: "string" },
        },
      },
    ],
  },
  {
    name: "hello_world",
    is_valid: false,
    id: "e66d38eb-19b4-4801-abf2-38248b3b2786",
    id_: "e66d38eb-19b4-4801-abf2-38248b3b2786",
    link: "",
    app_version: "1.0.0",
    description: "An example of a Walkoff App specification",
    environment: "cloud",
    contact_info: {
      name: "Walkoff Team",
      url: "https://github.com/nsacyber/walkoff",
    },
    actions: [
      {
        description:
          "Returns Hello World from the hostname the action is run on",
        id_: "ac0e2250-20b1-46a3-93ec-1718f9973cc4",
        name: "hello_world",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [],
        returns: {
          description: "",
          id_: "66f4cd0e-7a97-4185-a167-3956dcf3f627",
          schema: { type: "string" },
        },
      },
      {
        description: "Returns a random float between 0.0 and 1.0",
        id_: "3817fd8b-1370-4ce8-b874-a526e3c204de",
        name: "random_number",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [],
        returns: {
          description: "",
          id_: "c788404e-c637-4704-bf9e-1b861060e97e",
          schema: { type: "number" },
        },
      },
      {
        description:
          "returns the outputs from the trigger data if it's in Json format.",
        id_: "7fae3591-ab32-402d-8dc4-26e8b802c661",
        name: "repeat_trigger_as_json",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "message to hold output from",
            id_: "0f0a76ba-b590-4150-ae03-02d0e797f7e4",
            name: "call",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "1ab56d07-0ce1-4fe5-be01-d70337d9d589",
          schema: { type: "object" },
        },
      },
      {
        description: "Repeats the call parameter",
        id_: "23984f43-7593-4c7b-81b6-77852e498add",
        name: "repeat_back_to_me",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "message to repeat",
            id_: "bedf6d97-958c-4acd-b8a9-a72e19c5d54b",
            name: "call",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "",
          id_: "78708871-00b5-49e6-a4b4-d5e265d89f36",
          schema: { type: "string" },
        },
      },
      {
        description: "Increments the number parameter by 1",
        id_: "86624c25-bb66-4fc3-b66f-dc8d394f09bd",
        name: "return_plus_one",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "number to increment",
            id_: "45af1005-e7f0-46c3-ac09-28748f022a17",
            name: "number",
            required: true,
            schema: { type: "number" },
          },
        ],
        returns: {
          description: "",
          id_: "c84fc303-4d27-4091-9500-cb8cd83d6f05",
          schema: { type: "number" },
        },
      },
      {
        description: "Pause execution by the seconds parameter",
        id_: "bf787802-6039-4010-bc98-2d6d1dbdce21",
        name: "pause",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "seconds to pause for",
            id_: "9adcc6f4-0559-47c2-9496-02c8fb3fd58a",
            name: "seconds",
            required: true,
            schema: { type: "number" },
          },
        ],
        returns: { description: "", id_: "", schema: { type: "" } },
      },
      {
        description: "Echo the data parameter",
        id_: "0a9fec6a-5bf5-4266-a264-dae7fe52c0d5",
        name: "echo_array",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "array to echo",
            id_: "8ee260ee-f181-40b3-9d10-f1821f03228c",
            name: "data",
            required: true,
            schema: { type: "array" },
          },
        ],
        returns: {
          description: "",
          id_: "bde96402-3d66-43d8-a418-8c0859cb4d01",
          schema: { type: "array" },
        },
      },
      {
        description: "echos the given JSON object",
        id_: "e0927a9c-0e6c-429a-965b-40d0804c13f3",
        name: "echo_json",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "The data to echo",
            id_: "ba719062-90a0-42dd-8ef3-eaa304a57667",
            name: "data",
            required: true,
            schema: { type: "object" },
          },
        ],
        returns: {
          description: "",
          id_: "fd4f9c20-e4a0-43df-9a14-7bf0046f391f",
          schema: { type: "object" },
        },
      },
    ],
  },
  {
    name: "nmap",
    is_valid: false,
    id: "fc3d231c-9437-4ba9-8fe8-8ba199626197",
    id_: "fc3d231c-9437-4ba9-8fe8-8ba199626197",
    link: "",
    app_version: "1.0.0",
    description: "A simple app to interact with map",
    environment: "cloud",
    contact_info: {
      name: "Walkoff Team",
      url: "https://github.com/nsacyber/walkoff",
    },
    actions: [
      {
        description: "looks into xml nmap for osfamily",
        id_: "09840ebb-f72a-43e4-b49e-ab5a10d56d96",
        name: "parse_xml_for_windows_from_file",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "nmap output as xml filename",
            id_: "2bfccd6f-bd75-4ad0-b8df-5ff74aa64761",
            name: "nmap_file",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "os",
          id_: "9c6900a5-7e20-4033-9f3e-61ce8b95ab5f",
          schema: { type: "array" },
        },
      },
      {
        description: "transforms xml nmap results into json",
        id_: "150e28cb-3333-49ad-859c-b61e2b758ff7",
        name: "xml_to_json",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "nmap output either as xml filename or string",
            id_: "5fb18897-fe0e-473f-a83d-3c11f3d8b2a1",
            name: "nmap_out",
            required: true,
            schema: { type: "string" },
          },
          {
            description:
              "whether the previous parameter is a filename or string",
            id_: "f87d9bd6-e85a-4f6d-8300-902e3ba29347",
            name: "is_file",
            required: true,
            schema: { type: "boolean" },
          },
        ],
        returns: {
          description: "xml string on nmap output",
          id_: "1cd901cc-2101-4df1-9759-bf74fcdb7b9b",
          schema: { type: "string" },
        },
      },
      {
        description:
          "retrieves the hosts and ports from an nmap scan for use with OpenVAS",
        id_: "f743dfa4-2b06-4d1b-bbc7-55d34b3ce499",
        name: "ports_and_hosts_from_json",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "json string or filename",
            id_: "ca686f90-c947-4473-9d39-abc8bc4895fd",
            name: "nmap_json",
            required: true,
            schema: { type: "string" },
          },
          {
            description: "whether or not first input is a filename or not",
            id_: "e605313e-f9c5-4335-8ce7-d46abd422e68",
            name: "is_file",
            required: true,
            schema: { type: "boolean" },
          },
        ],
        returns: {
          description: "",
          id_: "040f32fc-d020-469f-9f4c-47928b076688",
          schema: { type: "string" },
        },
      },
      {
        description: "Runs an nmap scan, returns results as string or filename",
        id_: "ada798da-fff9-4ccf-85f2-24e2edb7722a",
        name: "run_scan",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description:
              "The target(s) to scan, comma separated values, CIDR supported",
            id_: "72704c22-a9c9-457f-ae33-e7c17e758e7d",
            name: "targets",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "see nmap manpage -- some options require root",
            id_: "51ea8e70-adae-47a1-9241-87674b4712c1",
            name: "options",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "xml string on nmap output",
          id_: "9c18b2a2-c023-4102-bd46-ddeb31a5430c",
          schema: { type: "array" },
        },
      },
      {
        description:
          "Gets the list of active hosts on a network from an nmap scan",
        id_: "48b4814f-47ea-4c66-a5db-cacc9cd305b6",
        name: "get_hosts_from_scan",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "The target (or targets in CIDR notation) to scan",
            id_: "e48d60f7-4590-4dd2-98ce-cd112ab9df2f",
            name: "targets",
            required: true,
            schema: { type: "array" },
          },
          {
            description: "",
            id_: "2eb29670-701e-4622-99f2-80e4b51cb06e",
            name: "options",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "xml string on nmap output",
          id_: "1f710e7d-ef6d-4a28-8ceb-8cbc49f6e197",
          schema: { type: "string" },
        },
      },
      {
        description: "looks into xml nmap for osfamily to match Linux",
        id_: "f5425571-2de1-4a84-9221-3829d118617a",
        name: "parse_xml_for_linux",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "nmap output as xml array",
            id_: "e2e7d0c7-13e8-49f9-85f2-da8bfc73308e",
            name: "nmap_arr",
            required: true,
            schema: { type: "array" },
          },
        ],
        returns: {
          description: "os",
          id_: "785f146f-095d-4008-a068-0c3146fdf4f0",
          schema: { type: "array" },
        },
      },
      {
        description: "looks into xml nmap for osfamily to match Windows",
        id_: "cf35f64c-43b4-4f23-ae75-70d912f4c1d5",
        name: "parse_xml_for_windows",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "nmap output as xml array",
            id_: "ef1ce558-2d2a-4d30-8e96-c4ad4c18fae9",
            name: "nmap_arr",
            required: true,
            schema: { type: "array" },
          },
        ],
        returns: {
          description: "os",
          id_: "6d21bd12-c076-459e-970d-cd2f39545efb",
          schema: { type: "array" },
        },
      },
      {
        description: "looks into xml nmap for osfamily",
        id_: "2baa37be-59cb-4e8a-a67b-1abae654ce4b",
        name: "parse_xml_for_linux_from_file",
        node_type: "ACTION",
        environment: "cloud",
        parameters: [
          {
            description: "nmap output as xml filename",
            id_: "aa6324a9-efd2-49c7-a181-90f67b39deb9",
            name: "nmap_file",
            required: true,
            schema: { type: "string" },
          },
        ],
        returns: {
          description: "os",
          id_: "96b98b54-2272-4065-b427-2eadf140cb12",
          schema: { type: "array" },
        },
      },
    ],
  },
];

export default Data;
